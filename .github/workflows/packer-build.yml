name: Packer Build on Release

on:
  release:
    types: [published]  

env:
  PACKER_VERSION: "1.11.2"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install Packer
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PACKER_VERSION }}

      # Step 3: Initialize Packer plugins
      - name: Run `packer init`
        run: packer init ./image.pkr.hcl

      # Step 4: Configure AWS credentials using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      # Step 5: Save GitHub Secrets to secrets.sh
      - name: Save secrets to secrets.sh
        run: |
          echo "#!/bin/bash" > $GITHUB_WORKSPACE/secrets.sh
          echo "export SECRET_KEY='${{ secrets.SECRET_KEY }}'" >> $GITHUB_WORKSPACE/secrets.sh
          echo "export DB_USER='${{ secrets.DB_USER }}'" >> $GITHUB_WORKSPACE/secrets.sh
          echo "export DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" >> $GITHUB_WORKSPACE/secrets.sh
          cat $GITHUB_WORKSPACE/secrets.sh  # Optional: Print the file for debugging

      # Step 6: Build the AMI
      - name: Build AMI with Packer
        run: |
          packer build \
            -color=false \
            -on-error=abort \
            -var "vpc_id=${{ secrets.VPC_ID }}" \
            -var "subnet_id=${{ secrets.SUBNET_ID }}" \
            -var "version=${{ github.event.release.tag_name }}" \
            -var "secret_key=${{ secrets.SECRET_KEY }}" \
            -var "db_user=${{ secrets.DB_USER }}" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            ./image.pkr.hcl